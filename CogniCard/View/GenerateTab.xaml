<UserControl x:Class="CogniCard.View.GenerateTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CogniCard.View"
             xmlns:converter="clr-namespace:CogniCard.Converter"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behavior="clr-namespace:CogniCard.Behavior"
             xmlns:viewmodel="clr-namespace:CogniCard.ViewModel"
             d:DataContext="{d:DesignInstance Type=viewmodel:GenerateTabViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converter:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converter:BooleanToVisibilityConverter x:Key="NegBoolToVisibilityConverter" True="Collapsed" False="Visible" />
    </UserControl.Resources>
    <Grid>
        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="{Binding Loading, Converter={StaticResource BoolToVisibilityConverter}}">
            <TextBlock Text="Please wait..." />
        </Grid>
        <Grid HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="{Binding Loading, Converter={StaticResource NegBoolToVisibilityConverter}}">
            <StackPanel HorizontalAlignment="Left"
                        Width="500"
                        Visibility="{Binding CanUse, Converter={StaticResource NegBoolToVisibilityConverter}}">
                <TextBlock Text="Welcome to collection generation!"
                           FontSize="18"
                           FontWeight="Bold"/>
                <TextBlock TextWrapping="Wrap" Margin="0,10">
                    In this tab you can use generative AI to quickly create collections from any content you desire. 
                    Begin by visiting
                    <Hyperlink NavigateUri="https://platform.openai.com/" 
                               RequestNavigate="Hyperlink_RequestNavigate">OpenAI platform</Hyperlink>
                    and creating your API key which will be used for the app. Make sure it has access to the o4 model.
                    After inserting the key you will have the option to input any text desired, choose the target number of
                    flashcards and define which flashcard types you want generated, the rest is on the AI.
                </TextBlock>
                <TextBox Text="{Binding ApiKey, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxPlaceholderBehavior Placeholder="Your API key..." />
                        <behavior:FocusLostActionBehavior CancelCommand="{Binding CancelKeyCommand}"
                                                          ConfirmCommand="{Binding ConfirmKeyCommand}" />
                    </i:Interaction.Behaviors>
                </TextBox>
                
            </StackPanel>
            <Grid
                Width="500"
                MaxHeight="450"
                Visibility="{Binding CanUse, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8*" />
                    <ColumnDefinition Width="5*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" MaxHeight="400" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                
                <TextBox TextWrapping="Wrap"
                         MaxHeight="400"
                         AcceptsReturn="True"
                         Margin="0,0,0,10"
                         Grid.Row="1"
                         Grid.RowSpan="2"
                         Text="{Binding InputText, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Behaviors>
                        <behavior:TextBoxPlaceholderBehavior Placeholder="Your input..." />
                    </i:Interaction.Behaviors>
                </TextBox>
                <StackPanel Grid.Column="1" Grid.Row="1" Margin="5">
                    <Grid>
                        <TextBlock FontWeight="Bold" Text="Number of flashcards" />
                        <Button Margin="0"
                                ToolTip="Remove API Key"
                                Padding="0"
                                Background="Transparent"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Right"
                                Command="{Binding ResetKeyCommand}">
                            <Image Source="../Assets/broom.png" Width="20" />
                        </Button>
                    </Grid>
                    <TextBox Width="30"
                             PreviewTextInput="TextBox_PreviewTextInput"
                             Text="{Binding NumberOfFlashcards}"
                             HorizontalAlignment="Left"/>
                    <ItemsControl BorderThickness="0" ItemsSource="{Binding FlashcardTypes}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <CheckBox Content="{Binding Name}" IsChecked="{Binding IsChecked}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>

                    <Button Margin="5,0,0,10" Grid.Row="2" Grid.Column="1"
                        Command="{Binding GenerateCommand}"
                        Content="Generate" />
            </Grid>
        </Grid>
    </Grid>
</UserControl>
